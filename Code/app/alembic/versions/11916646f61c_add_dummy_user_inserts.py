"""add dummy user inserts

Revision ID: 11916646f61c
Revises: a35b11590718
Create Date: 2025-03-27 11:15:01.653577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel 
import datetime


# revision identifiers, used by Alembic.
revision: str = '11916646f61c'
down_revision: Union[str, None] = 'a35b11590718'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
   
    metadata = sa.MetaData()
    bind = op.get_bind()

    # Define the tables explicitly using SQLAlchemy's Table class
    user = sa.Table('user', metadata, autoload_with=bind)

    n = 5# controls how many dummy users will be inserted
        #, you wont be able to login to these accounts and they wont have any vms associated  initially

    users = [
        {
            "created_on": datetime.datetime(2023, 1, 1, 12, 0, 0),
            "username": f"user{i}",
            "email": f"user{i}@mail.com",
            "id": i,  # Ensure the IDs are unique
            "hashed_password": "dummy",
            "last_login": datetime.datetime(2023, 5, 10, 14, 30, 0),
            "admin": 0
        }
        for i in range(2, n + 2)  # Generate users from 2 to n(id 1 is already occupied in previous migration)
    ]

    # Bulk insert all users in one go
    op.bulk_insert(user, users)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
